{"version":3,"sources":["store/reducers/index.ts","store/types/index.ts","store/index.ts","components/Notes/index.style.ts","components/Notes/index.tsx","components/Comments/index.style.ts","components/Comments/index.tsx","containers/MainScreen/index.style.ts","containers/MainScreen/index.tsx","containers/Sidebar/index.tsx","app/App.style.ts","app/index.tsx","serviceWorker.ts","index.tsx"],"names":["reducer","state","action","type","notes","title","content","comments","activeNote","splice","index","push","color","initialState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","stringify","setItem","saveState","getState","style","input","width","border","borderRadius","height","verticalAlign","paddingLeft","noteLi","display","alignItems","justifyContent","borderBottom","padding","note","wordBreak","noteTittle","cursor","fontWeight","noteControl","noteLength","marginRight","backgroundColor","addingBar","marginBottom","connect","dispatch","addNote","removeNote","setActiveNote","props","inputEl","useRef","notesList","map","key","activeStatus","undefined","position","className","data-key","length","Button","variant","ref","placeholder","onClick","current","value","e","target","tagName","closest","dataset","switchNote","reactCSS","swatch","background","boxShadow","popover","zIndex","cover","top","right","bottom","left","commentLi","commentColor","commentContent","fontSize","textarea","resize","borderColor","commentsList","useState","colorPickerState","toggleColorPiecker","setColor","textareaEl","comment","onKeyDown","textareaVal","ctrlKey","alert","onChange","colorObj","hex","container","MainScreen","Sidebar","app","sidebar","minHeight","main","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b14debd.chunk.js","sourcesContent":["import {\r\n  ADD_COMMENT,\r\n  ADD_NOTE,\r\n  IAction,\r\n  IStore,\r\n  REMOVE_NOTE,\r\n  SET_ACTIVE_NOTE\r\n} from 'store/types';\r\n\r\nconst reducer = (state: IStore, action: IAction): IStore => {\r\n  switch (action.type) {\r\n    case ADD_NOTE: {\r\n      return {\r\n        ...state,\r\n        notes: [...state.notes, { title: action.content, comments: [] }]\r\n      };\r\n    }\r\n    case SET_ACTIVE_NOTE: {\r\n      return {\r\n        ...state,\r\n        activeNote: action.activeNote\r\n      };\r\n    }\r\n    case REMOVE_NOTE: {\r\n      const notes = [...state.notes];\r\n      notes.splice(action.index, 1);\r\n      return {\r\n        ...state,\r\n        notes\r\n      };\r\n    }\r\n    case ADD_COMMENT: {\r\n      const notes = [...state.notes];\r\n      notes[state.activeNote].comments.push({\r\n        color: action.color,\r\n        content: action.content\r\n      });\r\n      return {\r\n        ...state,\r\n        notes\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","export const ADD_NOTE = 'ADD_NOTE';\r\nexport const SET_ACTIVE_NOTE = 'SET_ACTIVE_NOTE';\r\nexport const REMOVE_NOTE = 'REMOVE_NOTE';\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\n\r\nexport interface IStore {\r\n  activeNote: number;\r\n  notes: INotes[];\r\n}\r\ninterface INotes {\r\n  title: string;\r\n  comments: IComments[];\r\n}\r\ninterface IComments {\r\n  color: string;\r\n  content: string;\r\n}\r\n\r\nexport interface IAddNote {\r\n  type: typeof ADD_NOTE;\r\n  content: string;\r\n}\r\n\r\nexport interface ISetActiveNote {\r\n  type: typeof SET_ACTIVE_NOTE;\r\n  activeNote: number;\r\n}\r\nexport interface IRemoveNote {\r\n  type: typeof REMOVE_NOTE;\r\n  index: number;\r\n}\r\nexport interface IAddComment {\r\n  type: typeof ADD_COMMENT;\r\n  content: string;\r\n  color: string;\r\n}\r\n\r\nexport type IAction = IAddNote | ISetActiveNote | IRemoveNote | IAddComment;\r\n","import { createStore } from 'redux';\r\nimport reducer from 'store/reducers';\r\n\r\nimport { IStore } from './types';\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem('state');\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nexport const saveState = (state: IStore) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem('state', serializedState);\r\n  } catch (err) {}\r\n};\r\n\r\nconst initialState: IStore = loadState() || {\r\n  activeNote: 0,\r\n  notes: [\r\n    {\r\n      comments: [{ color: '#e66465', content: 'This is example' }],\r\n      title: 'example'\r\n    }\r\n  ]\r\n};\r\nconst store = createStore(reducer, initialState);\r\nstore.subscribe(() => {\r\n  saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n","const style = {\r\n    input: {\r\n        width: \"60%\",\r\n    \tborder: \"1px solid #CCCCCC\",\r\n    \tborderRadius: \"3px\",\r\n    \theight: \"38px\",\r\n    \tverticalAlign: \"middle\",\r\n    \tpaddingLeft: \"10px\",\r\n    },\r\n    noteLi: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        borderBottom: \"1px solid #F2F2F2\",\r\n        padding: \"5px 0\",\r\n    },\r\n    note: {\r\n        wordBreak: \"break-all\" as \"break-all\",\r\n    },\r\n    noteTittle: {\r\n        cursor: \"pointer\",\r\n        fontWeight: \"bold\" as \"bold\",\r\n    },\r\n    noteControl: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    noteLength: {\r\n        marginRight: \"10px\",\r\n        padding: \"0 13px\",\r\n        borderRadius: \"13px\",\r\n        color: \"#FFF\",\r\n        backgroundColor: \"#27CCC0\",\r\n    },\r\n    addingBar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"30px\",\r\n    }\r\n}\r\n\r\nexport default style;","import React, { MouseEvent, useRef } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  IStore,\r\n  IAction,\r\n  ADD_NOTE,\r\n  REMOVE_NOTE,\r\n  SET_ACTIVE_NOTE\r\n} from 'store/types';\r\n\r\nimport style from './index.style';\r\nimport './index.css';\r\n\r\nconst Notes: React.FC = (props: any) => {\r\n  const inputEl = useRef<HTMLInputElement>(null);\r\n  const addNote = () => {\r\n    if (inputEl && inputEl.current) {\r\n      props.addNote(inputEl.current.value);\r\n      inputEl.current.value = '';\r\n    }\r\n  };\r\n  // event delegation have used to change and active note and remove note\r\n  const switchNote = (e: MouseEvent) => {\r\n    if ((e.target as HTMLElement).tagName !== 'SPAN') return;\r\n    const key = ((e.target as HTMLElement).closest('LI') as HTMLLIElement)\r\n      .dataset.key;\r\n    props.setActiveNote(key);\r\n  };\r\n  const removeNote = (e: MouseEvent) => {\r\n    if ((e.target as HTMLButtonElement).tagName !== 'BUTTON') return;\r\n    const key = ((e.target as HTMLButtonElement).closest('LI') as HTMLLIElement)\r\n      .dataset.key;\r\n    // if comments belong to a note that is removing - clear comments\r\n    if (+key === +props.activeNote) props.setActiveNote(-1);\r\n    // change acive note index\r\n    else if (props.activeNote !== -1 && key < props.activeNote) {\r\n      props.setActiveNote(props.activeNote - 1);\r\n    }\r\n    props.removeNote(key);\r\n  };\r\n  const clickHandler = (e: MouseEvent) => {\r\n    switchNote(e);\r\n    removeNote(e);\r\n  };\r\n  const notesList = props.notes.map((note: any, key: number) => {\r\n    const activeStatus = key === +props.activeNote ? 'isActive' : undefined;\r\n\r\n    return (\r\n      <div key={key} style={{ position: 'relative' }}>\r\n        <li\r\n          key={key}\r\n          className={activeStatus}\r\n          data-key={key}\r\n          style={style.noteLi}\r\n        >\r\n          <div style={style.note}>\r\n            <span style={style.noteTittle}>{note.title}</span>\r\n          </div>\r\n          <div style={style.noteControl}>\r\n            <span style={style.noteLength}>{note.comments.length}</span>\r\n            <Button variant=\"outline-danger\">Delete</Button>\r\n          </div>\r\n        </li>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h2>Items</h2>\r\n      <div style={style.addingBar}>\r\n        <input style={style.input} ref={inputEl} placeholder=\"Type name here\" />\r\n        <Button className=\"but\" variant=\"info\" onClick={addNote}>\r\n          Add new\r\n        </Button>\r\n      </div>\r\n      <ul onClick={clickHandler}>{notesList}</ul>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) => {\r\n  return {\r\n    addNote: (content: string) => {\r\n      dispatch({ type: ADD_NOTE, content });\r\n    },\r\n    removeNote: (index: number) => {\r\n      dispatch({ type: REMOVE_NOTE, index });\r\n    },\r\n    setActiveNote: (activeNote: number) => {\r\n      dispatch({ type: SET_ACTIVE_NOTE, activeNote });\r\n    }\r\n  };\r\n};\r\nconst mapStateToProps = (state: IStore) => ({\r\n  activeNote: state.activeNote,\r\n  notes: state.notes\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);\r\n","import React from \"react\";\r\n\r\nimport reactCSS from 'reactcss';\r\n\r\nconst style = reactCSS({\r\n    'default': {\r\n        color: {\r\n            width: '52px',\r\n            height: '52px',\r\n        },\r\n        swatch: {\r\n            background: '#fff',\r\n            borderRadius: '1px',\r\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n            display: 'inline-block',\r\n            cursor: 'pointer',\r\n            marginRight: \"10px\",\r\n        },\r\n        popover: {\r\n            position: 'absolute',\r\n            zIndex: 2,\r\n        } as React.CSSProperties,\r\n        cover: {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n        } as React.CSSProperties,\r\n        commentLi: {\r\n            display: \"flex\",\r\n            borderBottom: \"1px solid #F2F2F2\",\r\n            padding: \"20px 0 10px\"\r\n        },\r\n        commentColor: {\r\n            width: \"52px\",\r\n            height: \"52px\",\r\n            marginRight: \"10px\",\r\n        },\r\n        commentContent: {\r\n            wordBreak: \"break-all\",\r\n            width: \"80%\",\r\n            fontSize: \"0.7em\"\r\n        } as React.CSSProperties,\r\n        textarea: {\r\n            width: \"80%\",\r\n            resize: \"none\",\r\n            borderColor: \"#CCCCCC\"\r\n        }as React.CSSProperties,\r\n    },\r\n});\r\n\r\nexport default style;\r\n","import React, { useRef, KeyboardEvent, useState } from 'react';\r\n\r\nimport { GithubPicker } from 'react-color';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { IStore, ADD_COMMENT } from 'store/types';\r\n\r\nimport style from './index.style';\r\n\r\nconst Comments: React.FC = (props: any) => {\r\n  const [colorPickerState, toggleColorPiecker] = useState(false);\r\n  const [color, setColor] = useState('#E6E6E6');\r\n  const textareaEl = useRef<HTMLTextAreaElement>(null);\r\n  let commentsList;\r\n\r\n  const addComment = () => {\r\n    props.dispatch({\r\n      color,\r\n      content: (textareaEl.current as HTMLTextAreaElement).value,\r\n      type: ADD_COMMENT\r\n    });\r\n  };\r\n  const onKeyDownHandler = (e: KeyboardEvent) => {\r\n    const textareaVal = (textareaEl.current as HTMLTextAreaElement).value;\r\n    if (e.ctrlKey && e.key === 'Enter' && textareaVal !== '') {\r\n      if (+props.activeNote === -1) {\r\n        alert('Shoose note to add a comment');\r\n        return;\r\n      }\r\n      addComment();\r\n      (textareaEl.current as HTMLTextAreaElement).value = '';\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    toggleColorPiecker(!colorPickerState);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    toggleColorPiecker(false);\r\n  };\r\n  const handleChange = (colorObj: any) => {\r\n    setColor(colorObj.hex);\r\n    toggleColorPiecker(false);\r\n  };\r\n\r\n  // don't show comments if there no activeNote\r\n  if (props.activeNote !== -1) {\r\n    commentsList = props.notes[props.activeNote].comments.map(\r\n      (comment: any, key: number) => (\r\n        <li key={key} style={style.commentLi}>\r\n          <div style={{ ...style.commentColor, background: comment.color }} />\r\n          <p style={style.commentContent}>{comment.content}</p>\r\n        </li>\r\n      )\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div onKeyDown={onKeyDownHandler}>\r\n      <h2>\r\n        Comments{' '}\r\n        {+props.activeNote + 1 ? '#' + (+props.activeNote + 1) : undefined}\r\n      </h2>\r\n      <ul>{commentsList}</ul>\r\n      <div style={style.swatch} onClick={handleClick}>\r\n        <div style={{ ...style.color, background: color }} />\r\n      </div>\r\n\r\n      {colorPickerState ? (\r\n        <div style={style.popover}>\r\n          <div style={style.cover} onClick={handleClose} />\r\n          <GithubPicker color={color} onChange={handleChange} />\r\n        </div>\r\n      ) : null}\r\n\r\n      <textarea\r\n        ref={textareaEl}\r\n        style={style.textarea}\r\n        placeholder=\"To add comment press Ctrl+Enter\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n  activeNote: state.activeNote,\r\n  notes: state.notes\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","const style = {\r\n\tcontainer: {\r\n\t\tpadding: \"30px 0 30px 30px\", \r\n\t\talignItems: \"flex-start\",\r\n\t},\t\r\n}\r\n\r\nexport default style;","import React from 'react';\r\n\r\nimport Notes from 'components/Notes';\r\nimport Comments from 'components/Comments';\r\n\r\nimport style from './index.style';\r\nimport './index.css';\r\n\r\nconst MainScreen: React.FC = (props: any) => {\r\n  return (\r\n    <div className=\"row no-gutters\" style={style.container}>\r\n      <div className=\"col note_comment\">\r\n        <Notes />\r\n      </div>\r\n      <div className=\"col note_comment\">\r\n        <Comments />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React from 'react';\r\n\r\nconst Sidebar: React.FC = () => {\r\n  return (\r\n    <div style={{ position: 'fixed' }}>\r\n      <h3>DAIRY APP</h3>\r\n      <h6 style={{ color: '#808080' }}>Comment with no sense</h6>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","const style = {\r\n    app: {\r\n        display: \"flex\",\r\n    },\r\n    sidebar: {\r\n        backgroundColor: \"#2B2F3E\",\r\n        color: \"white\",\r\n        minHeight: \"100vh\",\r\n        padding: \"2.5vw 0 0 2.5vw\",\r\n        width: \"20%\",\r\n    },\r\n    main: {\r\n        width: \"80%\",\r\n    },\r\n}\r\n\r\nexport default style;\r\n","import React from 'react';\n\nimport MainScreen from 'containers/MainScreen';\nimport Sidebar from 'containers/Sidebar';\n\nimport { connect } from 'react-redux';\n\nimport { IStore } from 'store/types';\n\nimport style from './App.style';\n\nimport './App.css';\n\nconst App: React.FC = (props: any) => {\n  return (\n    <div style={style.app}>\n      <div className=\"sidebar\" style={style.sidebar}>\n        <Sidebar />\n      </div>\n      <div style={style.main}>\n        <MainScreen />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IStore) => ({\n  notes: state.notes\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nimport 'index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from 'app';\nimport * as serviceWorker from 'serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}