{"version":3,"sources":["reducers/index.ts","types/index.ts","components/MainScreen/Notes/index.style.ts","components/MainScreen/Notes/index.tsx","components/MainScreen/Comments/index.style.ts","components/MainScreen/Comments/index.tsx","components/MainScreen/index.style.ts","components/MainScreen/index.tsx","components/Sidebar/index.tsx","App.style.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["reducer","state","action","type","notes","title","content","comments","activeNote","splice","index","push","color","style","input","width","border","borderRadius","height","verticalAlign","paddingLeft","noteLi","display","alignItems","justifyContent","borderBottom","padding","note","wordBreak","noteTittle","cursor","fontWeight","noteControl","noteLength","marginRight","backgroundColor","addingBar","marginBottom","connect","dispatch","addNote","removeNote","setActiveNote","props","inputEl","useRef","notesList","map","key","activeStatus","undefined","position","className","data-key","length","Button","variant","ref","placeholder","onClick","current","value","e","target","tagName","closest","dataset","switchNote","reactCSS","swatch","background","boxShadow","popover","zIndex","cover","top","right","bottom","left","commentLi","commentColor","commentContent","fontSize","textarea","resize","borderColor","commentsList","useState","colorPickerState","toggleColorPiecker","setColor","textareaEl","comment","onKeyDown","textareaVal","ctrlKey","alert","onChange","hex","container","MainScreen","Sidebar","app","sidebar","minHeight","main","Boolean","window","location","hostname","match","loadState","serializedState","localStorage","getItem","JSON","parse","err","saveState","stringify","setItem","initialState","store","createStore","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4e0a905.chunk.js","sourcesContent":["import { IAction, IStore, ADD_COMMENT, ADD_NOTE, REMOVE_NOTE, SET_ACTIVE_NOTE } from \"types\";\r\n\r\nconst reducer = (state: IStore, action: IAction): IStore => {\r\n    switch (action.type) {\r\n        case ADD_NOTE: {\r\n            return {\r\n                ...state,\r\n                notes: [...state.notes, {title: action.content, comments: []}],\r\n            };\r\n        }\r\n        case SET_ACTIVE_NOTE: {\r\n            return {\r\n                ...state,\r\n                activeNote: action.activeNote,\r\n            };\r\n        }\r\n        case REMOVE_NOTE: {\r\n        \tconst notes = [...state.notes];\r\n        \tnotes.splice(action.index, 1);\r\n        \treturn {\r\n        \t\t...state,\r\n        \t\tnotes: notes,\r\n        \t};\r\n        }\r\n        case ADD_COMMENT: {\r\n        \tconst notes = [...state.notes];\r\n        \tnotes[state.activeNote].comments.push({content: action.content, color: action.color});\r\n        \treturn {\r\n        \t\t...state,\r\n        \t\tnotes: notes,\r\n        \t};\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n","export const ADD_NOTE = \"ADD_NOTE\";\r\nexport const SET_ACTIVE_NOTE = \"SET_ACTIVE_NOTE\";\r\nexport const REMOVE_NOTE = \"REMOVE_NOTE\";\r\nexport const ADD_COMMENT = \"ADD_COMMENT\";\r\n\r\nexport interface IStore {\r\n    activeNote: number;\r\n    notes: INotes[];\r\n}\r\ninterface INotes {\r\n    title: string;\r\n    comments: IComments[];\r\n}\r\ninterface IComments {\r\n    color: string;\r\n    content: string;\r\n}\r\n\r\nexport interface IAddNote {\r\n    type: typeof ADD_NOTE;\r\n    content: string;\r\n}\r\n\r\nexport interface ISetActiveNote {\r\n    type: typeof SET_ACTIVE_NOTE;\r\n    activeNote: number;\r\n}\r\nexport interface IRemoveNote {\r\n    type: typeof REMOVE_NOTE;\r\n    index: number;\r\n}\r\nexport interface IAddComment {\r\n    type: typeof ADD_COMMENT;\r\n    content: string;\r\n    color: string;\r\n}\r\n\r\nexport type IAction = IAddNote | ISetActiveNote | IRemoveNote | IAddComment;\r\n","const style = {\r\n    input: {\r\n        width: \"60%\",\r\n    \tborder: \"1px solid #CCCCCC\",\r\n    \tborderRadius: \"3px\",\r\n    \theight: \"38px\",\r\n    \tverticalAlign: \"middle\",\r\n    \tpaddingLeft: \"10px\",\r\n    },\r\n    noteLi: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        borderBottom: \"1px solid #F2F2F2\",\r\n        padding: \"5px 0\",\r\n    },\r\n    note: {\r\n        wordBreak: \"break-all\" as \"break-all\",\r\n    },\r\n    noteTittle: {\r\n        cursor: \"pointer\",\r\n        fontWeight: \"bold\" as \"bold\",\r\n    },\r\n    noteControl: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    noteLength: {\r\n        marginRight: \"10px\",\r\n        padding: \"0 13px\",\r\n        borderRadius: \"13px\",\r\n        color: \"#FFF\",\r\n        backgroundColor: \"#27CCC0\",\r\n    },\r\n    addingBar: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"30px\",\r\n    }\r\n}\r\n\r\nexport default style;","import React, { MouseEvent, useRef } from \"react\";\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nimport { Dispatch } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IStore, IAction, ADD_NOTE, REMOVE_NOTE, SET_ACTIVE_NOTE } from \"types\";\r\n\r\nimport style from \"./index.style\";\r\nimport \"./index.css\";\r\n\r\nconst Notes: React.FC = (props: any) => {\r\n    const inputEl = useRef<HTMLInputElement>(null);\r\n    const addNote = () => {\r\n        if (inputEl && inputEl.current) {\r\n            props.addNote(inputEl.current.value);\r\n            inputEl.current.value = \"\";\r\n        }\r\n    };\r\n    // event delegation have used to change and active note and remove note \r\n    const switchNote = (e: MouseEvent) => {\r\n        if ( (e.target as HTMLElement).tagName !== \"SPAN\") return;\r\n        const key = ((e.target as HTMLElement).closest(\"LI\") as HTMLLIElement).dataset.key;\r\n        props.setActiveNote(key);\r\n    };\r\n    const removeNote = (e: MouseEvent) => {\r\n        if ( (e.target as HTMLButtonElement).tagName !== \"BUTTON\") return;\r\n        let key = ((e.target as HTMLButtonElement).closest(\"LI\") as HTMLLIElement).dataset.key;\r\n        // if comments belong to a note that is removing - clear comments\r\n        if (key === props.activeNote) \r\n            props.setActiveNote(-1);\r\n        // change acive note index  \r\n        else if (props.activeNote !== -1 && key < props.activeNote) \r\n            props.setActiveNote(props.activeNote - 1);\r\n        props.removeNote(key);\r\n    }\r\n    const clickHandler = (e: MouseEvent) => {\r\n    \tswitchNote(e);\r\n    \tremoveNote(e);\r\n    }\r\n    const notesList = props.notes.map( (note: any, key: number) => {\r\n        let activeStatus = (key === +props.activeNote) ? \"isActive\": undefined;\r\n\r\n        return (\r\n            <div key={key} style={{position: \"relative\"}}>\r\n                <li key={key} className={activeStatus} data-key={key} style={style.noteLi}>\r\n                <div style={style.note}>\r\n                    <span style={style.noteTittle}>{note.title}</span>\r\n                </div>\r\n                <div style={style.noteControl}>\r\n                    <span style={style.noteLength}>{note.comments.length}</span>\r\n                \t<Button variant=\"outline-danger\">Delete</Button>\r\n                </div>\r\n                </li>\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <h2>Items</h2>\r\n            <div style={style.addingBar}>\r\n\t            <input style={style.input} ref={inputEl} placeholder=\"Type name here\" />\r\n\t            <Button className=\"but\" variant=\"info\" onClick={addNote}>Add new</Button>\r\n            </div>\r\n            <ul onClick={clickHandler}>\r\n                {notesList}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<IAction>) => {\r\n    return {\r\n        addNote: (content: string) => {\r\n            dispatch({type: ADD_NOTE, content})\r\n        },\r\n        removeNote: (index: number) => {\r\n            dispatch({type: REMOVE_NOTE, index})\r\n        },\r\n        setActiveNote: (activeNote: number) => {\r\n            dispatch({type: SET_ACTIVE_NOTE, activeNote})\r\n        },\r\n    }        \r\n}\r\nconst mapStateToProps = (state: IStore) => ({\r\n    notes: state.notes,\r\n    activeNote: state.activeNote,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notes);\r\n","import React from \"react\";\r\n\r\nimport reactCSS from 'reactcss';\r\n\r\nconst style = reactCSS({\r\n    'default': {\r\n        color: {\r\n            width: '52px',\r\n            height: '52px',\r\n        },\r\n        swatch: {\r\n            background: '#fff',\r\n            borderRadius: '1px',\r\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n            display: 'inline-block',\r\n            cursor: 'pointer',\r\n            marginRight: \"10px\",\r\n        },\r\n        popover: {\r\n            position: 'absolute',\r\n            zIndex: 2,\r\n        } as React.CSSProperties,\r\n        cover: {\r\n            position: 'fixed',\r\n            top: '0px',\r\n            right: '0px',\r\n            bottom: '0px',\r\n            left: '0px',\r\n        } as React.CSSProperties,\r\n        commentLi: {\r\n            display: \"flex\",\r\n            borderBottom: \"1px solid #F2F2F2\",\r\n            padding: \"20px 0 10px\"\r\n        },\r\n        commentColor: {\r\n            width: \"52px\",\r\n            height: \"52px\",\r\n            marginRight: \"10px\",\r\n        },\r\n        commentContent: {\r\n            wordBreak: \"break-all\",\r\n            width: \"80%\",\r\n            fontSize: \"0.7em\"\r\n        } as React.CSSProperties,\r\n        textarea: {\r\n            width: \"80%\",\r\n            resize: \"none\",\r\n            borderColor: \"#CCCCCC\"\r\n        }as React.CSSProperties,\r\n    },\r\n});\r\n\r\nexport default style;\r\n","import React, { useRef, KeyboardEvent, useState } from \"react\";\r\n\r\nimport reactCSS from 'reactcss';\r\n\r\nimport { GithubPicker } from 'react-color';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IStore, ADD_COMMENT } from \"types\";\r\n\r\nimport style from \"./index.style\";\r\n\r\nconst Comments: React.FC = (props: any) => {\r\n    const [ colorPickerState, toggleColorPiecker ] = useState(false);\r\n    const [ color, setColor ] = useState(\"#E6E6E6\");\r\n    const textareaEl = useRef<HTMLTextAreaElement>(null);\r\n    let commentsList;\r\n\r\n    const addComment = () => {\r\n        props.dispatch({\r\n            type: ADD_COMMENT,\r\n            content: (textareaEl.current as HTMLTextAreaElement).value,\r\n            color: color,\r\n        });\r\n    }\r\n    const onKeyDownHandler = (e: KeyboardEvent) => {\r\n        let textareaVal = (textareaEl.current as HTMLTextAreaElement).value;\r\n        if ( e.ctrlKey && e.key === \"Enter\" && textareaVal !== \"\") {\r\n            if (+props.activeNote === -1) {\r\n                alert(\"Shoose note to add a comment\");\r\n                return;\r\n            }\r\n            addComment();\r\n            (textareaEl.current as HTMLTextAreaElement).value = \"\";\r\n        }\r\n    }\r\n\r\n    const handleClick = () => {\r\n        toggleColorPiecker(!colorPickerState)\r\n    };\r\n\r\n    const handleClose = () => {\r\n        toggleColorPiecker(false)\r\n    };\r\n    const handleChange = (color: any) => {\r\n        setColor(color.hex);\r\n        toggleColorPiecker(false);\r\n    };\r\n\r\n    // don't show comments if there no activeNote\r\n    if (props.activeNote !== -1)\r\n        commentsList = props.notes[props.activeNote].comments.map(\r\n            (comment: any, key: number) => (\r\n                <li key={key} style={style.commentLi}>\r\n                    <div style={{...style.commentColor, background: comment.color}}/>\r\n                    <p style={style.commentContent}>{comment.content}</p>\r\n                </li>\r\n            )\r\n        );\r\n\r\n    return (\r\n        <div onKeyDown={onKeyDownHandler}>\r\n            <h2>Comments {+props.activeNote + 1 ? \"#\" + (+props.activeNote + 1): undefined}</h2>\r\n            <ul>\r\n                {commentsList}\r\n            </ul>\r\n            <div style={style.swatch} onClick={handleClick}>\r\n                <div style={{...style.color, background: color}} />\r\n            </div>\r\n\r\n            {colorPickerState ? (\r\n                <div style={style.popover}>\r\n                    <div style={style.cover} onClick={handleClose}/>\r\n                    <GithubPicker color={color} onChange={handleChange}/>\r\n                </div>\r\n            ) : null}\r\n\r\n            <textarea \r\n                ref={textareaEl}\r\n                style={style.textarea}\r\n                placeholder=\"To add comment press Ctrl+Enter\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: IStore) => ({\r\n    activeNote: state.activeNote,\r\n    notes: state.notes,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Comments);\r\n","const style = {\r\n\tcontainer: {\r\n\t\tpadding: \"30px 0 30px 30px\", \r\n\t\talignItems: \"flex-start\",\r\n\t},\t\r\n}\r\n\r\nexport default style;","import React from \"react\";\r\n\r\nimport Notes from \"./Notes\";\r\nimport Comments from \"./Comments\";\r\n\r\nimport style from \"./index.style\";\r\nimport \"./index.css\";\r\n\r\nconst MainScreen: React.FC = (props: any) => {\r\n    return (\r\n        <div className=\"row no-gutters\" style={style.container}>\r\n        \t<div className=\"col note_comment\">\r\n\t            <Notes />\r\n            </div>\r\n        \t<div className=\"col note_comment\">\r\n\t            <Comments />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React from \"react\";\r\n\r\nconst Sidebar: React.FC = () => {\r\n    return (\r\n        <div style={{position: \"fixed\"}}>\r\n            <h3>DAIRY APP</h3>\r\n            <h6 style={{color: \"#808080\"}}>Comment with no sense</h6>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Sidebar;\r\n","const style = {\r\n    app: {\r\n        display: \"flex\",\r\n    },\r\n    sidebar: {\r\n        backgroundColor: \"#2B2F3E\",\r\n        color: \"white\",\r\n        minHeight: \"100vh\",\r\n        padding: \"2.5vw 0 0 2.5vw\",\r\n        width: \"20%\",\r\n    },\r\n    main: {\r\n        width: \"80%\",\r\n    },\r\n}\r\n\r\nexport default style;\r\n","import React from \"react\";\n\nimport MainScreen from \"components/MainScreen\";\nimport Sidebar from \"components/Sidebar\";\n\nimport { connect } from \"react-redux\";\n\nimport { IStore } from \"types\";\n\nimport style from \"App.style\";\n\nimport \"App.css\";\n\n\nconst App: React.FC = (props: any) => {\n    return (\n    \t  <div style={style.app}>\n          \t<div className=\"sidebar\" style={style.sidebar}>\n    \t          <Sidebar/>\n    \t      </div>\n          \t<div style={style.main}>\n    \t          <MainScreen/>\n    \t      </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state: IStore) => ({\n    notes: state.notes,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { createStore } from \"redux\";\nimport reducer from \"reducers\";\n\nimport { Provider } from \"react-redux\";\n\nimport \"index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from \"App\";\nimport * as serviceWorker from \"serviceWorker\";\n\nimport { IStore } from \"types\";\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem('state');\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; \n\nexport const saveState = (state: IStore) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem('state', serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\nconst initialState: IStore = loadState() || {\n    activeNote: 0,\n    notes: [{title: \"example\", comments: [{color: \"#e66465\", content: \"This is example\"}]}],\n};\nconst store = createStore(reducer, initialState);\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}